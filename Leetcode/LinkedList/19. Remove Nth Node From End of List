/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        if(head.next == null && n==1)
            return null;
        ListNode front = head, rear = null;
        
        for(int i=0;i<n;i++)
            front = front.next;           
        
        while(front!=null) {
            front = front.next;
            if(rear==null)
                rear = head;
            else
                rear = rear.next;
        }
        
        if(rear==null) 
            return head.next;
        else if(rear.next!=null)
            rear.next = rear.next.next;
        
        return head;
    }
}
/*
Given a linked list, remove the n-th node from the end of list and return its head.

Example:

Given linked list: 1->2->3->4->5, and n = 2.

After removing the second node from the end, the linked list becomes 1->2->3->5.
Note:

Given n will always be valid.

Follow up:

Could you do this in one pass?

Accepted
321,357
Submissions
954,590
*/
