class Solution {
public int longestMountain(int[] A) {
    boolean downward = false;
    int globalMax = 0;
    int currentMax = 1;
    int len = A.length;
        
    if (len>2) {
        for(int i=1; i<len; i++) {
            if(!downward) {
                if(A[i-1]<A[i]) {
                    currentMax++;
                }
                else if(A[i-1]>A[i] && currentMax>1) {
                    downward = true;
                    currentMax++;
                    if(currentMax>globalMax)
                        globalMax=currentMax;
                }
                else {
                    currentMax = 1;
                    downward = false;
                }
            }
            else {
                if(A[i-1]>A[i]) {
                    currentMax++;
                    if(currentMax>globalMax)
                        globalMax=currentMax;
                }
                else {
                    if(currentMax>globalMax)
                        globalMax=currentMax;
                    currentMax=1;
                    downward=false;
                    i--;
                }
            }
        }
    }
        
    return globalMax>2 ? globalMax : 0;
}
