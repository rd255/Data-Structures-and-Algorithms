// Given a non-empty array of integers, every element appears twice except for one. Find that single one.

// Note:

// Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?

// Example 1:

// Input: [2,2,1]
// Output: 1
// Example 2:

// Input: [4,1,2,1,2]
// Output: 4
// Accepted
// 379,594
// Submissions
// 656,494
    
class Solution {
    public int singleNumber(int[] nums) {
        HashSet<Integer> hs = new HashSet<Integer>();
        long ret = 0;
        for(int i=0;i<nums.length;i++) {
            int a = nums[i];
            if(!hs.contains(a)) {
                ret+=a;
                hs.add(a);
            } 
            else {
                ret-=a;
            }
        }
        return (int)ret;
    }
}
