class Solution {
    public String fractionToDecimal(int numerator, int denominator) {
        if(numerator == 0)
            return "0";
        StringBuilder ret = new StringBuilder("");
        ret.append(((numerator>0) ^ (denominator>0)) ? "-":"");
        long num = Math.abs((long)numerator);
        long den = Math.abs((long)denominator);
        ret.append(num/den);
        if(num%den==0) {
            return ret.toString();
        } 
        else {
            ret.append(".");
            num%=den;
        }
        HashMap<Long,Integer> hm = new HashMap<Long,Integer>();
        while(num!=0) {
            if(!hm.containsKey(num)) 
                hm.put(num,ret.length());
            else {
                int index = hm.get(num);
                ret.insert(index,"(");
                ret.append(")");
                break;
            }
            num*=10;
            ret.append(num/den);
            num%=den;
            
        }
        return ret.toString();
    }
}
/*
Medium

538

1186

Favorite

Share
Given two integers representing the numerator and denominator of a fraction, return the fraction in string format.

If the fractional part is repeating, enclose the repeating part in parentheses.

Example 1:

Input: numerator = 1, denominator = 2
Output: "0.5"
Example 2:

Input: numerator = 2, denominator = 1
Output: "2"
Example 3:

Input: numerator = 2, denominator = 3
Output: "0.(6)"
Accepted
95,323
Submissions
478,197
*/
