class Solution {
    public boolean buddyStrings(String A, String B) {
        int apple = A.length();
        int ball = B.length();
        if(apple != ball || apple<2)
            return false;
        int cnt =0;
        boolean[] isRepeat = new boolean[26];
        boolean repcnt = false;
        char a='\0';
        char b='\0';
        boolean charcnt = false;
        for(int i =0;i<apple;i++) {
            char ia = A.charAt(i);
            char ib = B.charAt(i);
            if(ia!=ib) {
                cnt++;
                if(cnt>2)
                    return false;
                else if(cnt == 1) {
                    a = ia;
                    b = ib;
                }
                else if (cnt ==2) {
                    if(a == ib && b ==ia) {
                        charcnt = true;
                    }
                }
            }
            if(isRepeat[ia-'a'])
                repcnt = true;
            else 
                isRepeat[ia-'a'] = true;
        }
        
        if( (cnt == 0 && repcnt) || (cnt==2 && charcnt) ) {
            return true;
        }
        else 
            return false;
    }
}

/*
Given two strings A and B of lowercase letters, return true if and only if we can swap two letters in A so that the result equals B.

 

Example 1:

Input: A = "ab", B = "ba"
Output: true
Example 2:

Input: A = "ab", B = "ab"
Output: false
Example 3:

Input: A = "aa", B = "aa"
Output: true
Example 4:

Input: A = "aaaaaaabc", B = "aaaaaaacb"
Output: true
Example 5:

Input: A = "", B = "aa"
Output: false
 

Note:

0 <= A.length <= 20000
0 <= B.length <= 20000
A and B consist only of lowercase letters.
Accepted
29,828
Submissions
106,966
*/
