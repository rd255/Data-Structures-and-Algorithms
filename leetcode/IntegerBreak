/ * Given a positive integer n, break it into the sum of at least two positive integers and maximize the product of those integers. Return the maximum product you can get.

/*


class Solution {
    public int integerBreak(int n) {
        if (n==2) {
            return 1;
        }
        else if(n==3) {
            return 2;
        }
        else if(n==4) {
            return 4;
        }
        else if((n%3)==2) {
            int multiple = (int) n/3;
            int a = (int)Math.pow(3, multiple);
            a *= 2;
            return a;
        }
        else if((n%3)==1) {
            int multiple = (int) n/3;
            int a = (int)Math.pow(3, (multiple-1));
            a *=4;
            return a;
        }
        else { // n%3 == 0
            int multiple = (int) n/3;
            return (int) Math.pow(3, multiple);
        }
        
    }
}