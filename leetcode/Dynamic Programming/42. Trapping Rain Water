class Solution {
    public int trap(int[] height) {
        int res = 0;
        int left = 0;
        int right = height.length-1;
        int lMax = 0;
        int rMax = 0;
        while(left<=right) {
            if(height[left] < height[right]) {
                if(height[left] > lMax) {
                    lMax = height[left];
                }
                else {
                    res += lMax - height[left];
                }
                left++;
            }
            else {
                if(height[right] > rMax) {
                    rMax = height[right];
                }
                else {
                    res += rMax - height[right];
                }
                right--;
            }
        }
        return res;
    }
}
/*
Hard

4776

83

Favorite

Share
Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.


The above elevation map is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped. Thanks Marcos for contributing this image!

Example:

Input: [0,1,0,2,1,0,1,3,2,1,2,1]
Output: 6
Accepted
372,521
Submissions
820,177
*/
