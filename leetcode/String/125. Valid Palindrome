class Solution {
    public boolean isPalindrome(String s) {
        int len = s.length();
        if(len<=1)
            return true;
        int i=0,j=len-1;
        char a,b;
        while(i<j) {
            a = Character.toLowerCase(s.charAt(i));
            b = Character.toLowerCase(s.charAt(j));
            if( ( (a>='a' && a<='z') || (a>='0'&& a<='9') ) && ( (b>='a' && b<='z') || (b>='0'&& b<='9') ) )
                if(a==b) {
                    i++;
                    j--;
                    continue;
                }
                else
                    return false;
            if (!((a>='a' && a<='z') || (a>='0'&& a<='9')))
                i++;
            if(!((b>='a' && b<='z') || (b>='0'&& b<='9')))
                j--;                
        }
        return true;
    }
}
/* 
Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.

Note: For the purpose of this problem, we define empty string as valid palindrome.

Example 1:

Input: "A man, a plan, a canal: Panama"
Output: true
Example 2:

Input: "race a car"
Output: false
Accepted
292,765
Submissions
999,106
*/
