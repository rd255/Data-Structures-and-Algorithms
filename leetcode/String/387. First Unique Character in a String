class Solution {
    public int firstUniqChar(String s) {
        if(s.isEmpty() || s == null || s.length()<1)
            return -1;
        if(s.length()==1)
            return 0;
        HashMap<Character, Integer> hm = new HashMap<Character, Integer>();
        for(int i=0;i<s.length();i++) {
            char a = s.charAt(i);
            if(hm.containsKey(a))
                hm.put(a,hm.get(a)+1);
            else
                hm.put(a,1);
        }
        for(int i=0;i<s.length();i++) {
            if(hm.get(s.charAt(i))==1)
                return i;
        }
        return -1;
    }
}
/*
Given a string, find the first non-repeating character in it and return it's index. If it doesn't exist, return -1.

Examples:

s = "leetcode"
return 0.

s = "loveleetcode",
return 2.
Note: You may assume the string contain only lowercase letters.

Accepted
195,735
Submissions
407,168
*/
