class Solution {
    public int missingNumber(int[] nums) {
        int realSum =0, actualSum=0,max =0;
        for(int i=0;i<nums.length;i++) {
            realSum+=i;
            actualSum+=nums[i];
            if(nums[i]>max)
                max=nums[i];
        }
        int a = actualSum-realSum;
        return (a==0) ? max+1 : max-a;
    }
}
/*
Given an array containing n distinct numbers taken from 0, 1, 2, ..., n, find the one that is missing from the array.

Example 1:

Input: [3,0,1]
Output: 2
Example 2:

Input: [9,6,4,2,3,5,7,0,1]
Output: 8
Note:
Your algorithm should run in linear runtime complexity. Could you implement it using only constant extra space complexity?

Accepted
226,497
Submissions
484,136
*/
